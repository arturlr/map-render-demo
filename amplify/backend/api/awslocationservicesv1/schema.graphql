type User @model 
@auth(rules: [
  { allow:  private, provider: iam },
  { allow:  private, provider: userPools }, 
  { allow: owner }
]){
  id: ID!
  firstName: String!
  lastName: String!
  device: Device @connection
  email: String
}

type Device @model 
@auth(rules: [
  { allow:  private, provider: iam }, 
  { allow:  private, provider: userPools }, 
  { allow: owner }
]){
  id: ID!
  userID: ID
  deviceOS: String
  lastLocation: Coordinate
  geofence: GeoFence @connection
}

type GeoFence @model 
@key(name: "byGeoFenceName", fields: ["geoFenceName"])
@auth(rules: [
  { allow:  private, provider: iam }, 
  { allow:  private, provider: userPools }, 
  { allow: owner }
]) {
  id: ID!
  geoFenceName: String!
}

type Alert @model (subscriptions: { level: public })
@auth(rules: [
  { allow: private, provider: iam },
  { allow: private, provider: userPools },  
  { allow: owner }
]) {
  id: ID!
  userID: ID!
  type: String!
  description: String!
  location: Coordinate
  createdAt: AWSDateTime!
  expirationTime: Int!
}

type Coordinate
@aws_iam @aws_cognito_user_pools {
  lat: Float!
  lng: Float!
}